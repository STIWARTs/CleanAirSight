version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: cleanairsight-mongodb
    restart: unless-stopped
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: cleanairsight
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    networks:
      - cleanairsight-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cleanairsight-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cleanairsight-network

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.prod
    container_name: cleanairsight-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ../data:/app/data
      - ../models:/app/models
      - backend_logs:/app/logs
    environment:
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/cleanairsight?authSource=admin
      - REDIS_URL=redis://redis:6379
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - ENVIRONMENT=production
    env_file:
      - .env.prod
    depends_on:
      - mongodb
      - redis
    networks:
      - cleanairsight-network

  # Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.prod
    container_name: cleanairsight-frontend
    restart: unless-stopped
    ports:
      - "80:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://${DOMAIN}:8000
    depends_on:
      - backend
    networks:
      - cleanairsight-network

volumes:
  mongodb_data:
  redis_data:
  backend_logs:

networks:
  cleanairsight-network:
    driver: bridge